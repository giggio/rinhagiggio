version: '3.9'
name: 'rinha-giovannibassi'

services:
  api1:
    image: giggio/rinhabackend-2023-q3
    hostname: api1
    container_name: rinhaapi1
    environment:
      - ConnectionStrings__Rinha=Host=db;Database=rinha;Username=rinha;Password=rinha;Pooling=true;Minimum Pool Size=10;Maximum Pool Size=50;Multiplexing=true;Timeout=5;Command Timeout=5;Cancellation Timeout=-1;No Reset On Close=true
      - Cache__PeerAddress=http://api2:10000
      - Cache__Leader=true
      #- Logging__LogLevel__Default=Debug
    depends_on:
      db:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: '768MB'
    networks:
      - app-network
    healthcheck:
      test: curl -o /dev/null -fs --retry 0 --head http://localhost:9999/healthz || exit 1
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 2s

  api2:
    image: giggio/rinhabackend-2023-q3
    hostname: api2
    container_name: rinhaapi2
    environment:
      - ConnectionStrings__Rinha=Host=db;Database=rinha;Username=rinha;Password=rinha;Pooling=true;Minimum Pool Size=10;Maximum Pool Size=50;Multiplexing=true;Timeout=5;Command Timeout=5;Cancellation Timeout=-1;No Reset On Close=true
      - Cache__PeerAddress=http://api1:10000
      - Cache__Leader=false
      #- Logging__LogLevel__Default=Debug
    depends_on:
      db:
        condition: service_healthy
      api1:
        condition: service_healthy
    ulimits:
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '512MB'
    networks:
      - app-network
    healthcheck:
      test: curl -o /dev/null -fs --retry 0 --head http://localhost:9999/healthz || exit 1
      interval: 10s
      retries: 3
      start_period: 5s
      timeout: 2s

  nginx:
    image: nginx:latest
    container_name: rinhanginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '512MB'

  db:
    image: postgres:latest
    container_name: rinhadb
    command: 'postgres -c max_connections=1000 -c shared_buffers=512MB -c synchronous_commit=off -c fsync=off -c full_page_writes=off'
    hostname: db
    environment:
      - POSTGRES_PASSWORD=rinha
      - POSTGRES_USER=rinha
      - POSTGRES_DB=rinha
    ports:
      - "5432:5432"
    volumes:
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql:ro
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '1280MB'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "--username", "rinha"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s

networks:
  app-network:

